generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Review {
  id        String  @id @default(cuid())
  title     String
  body      String
  rating    Int
  authorId  String
  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@index([productId])
}

model Color {
  id      String    @id @default(cuid())
  name    String
  hex     String
  product Product[]
}

model Dimension {
  id      String    @id @default(cuid())
  name    String
  value   String
  product Product[]
}

model Image {
  id        String  @id @default(cuid())
  url       String
  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@index([productId])
}

model Feature {
  id        String  @id @default(cuid())
  name      String
  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@index([productId])
}

model Producer {
  id       String    @id @default(cuid())
  name     String
  products Product[]
}

model Product {
  id          String      @id @default(cuid())
  description String      @db.VarChar(2000)
  price       Float
  producer    Producer    @relation(fields: [producerId], references: [id])
  producerId  String  @default(cuid()) 
  name        String      @unique
  images      Image[]
  features    Feature[]
  dimensions  Dimension[]
  colors      Color[]
  reviews     Review[]
}

model ColorToProduct {
  A String
  B String

  @@unique([A, B], map: "_ColorToProduct_AB_unique")
  @@index([B], map: "_ColorToProduct_B_index")
  @@map("_ColorToProduct")
}

model DimensionToProduct {
  A String
  B String

  @@unique([A, B], map: "_DimensionToProduct_AB_unique")
  @@index([B], map: "_DimensionToProduct_B_index")
  @@map("_DimensionToProduct")
}
